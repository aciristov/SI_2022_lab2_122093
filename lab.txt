3. Cyclomative complexity е мерка на комплексност на програмата, поточно кодниот сегмент каде што ја претставува внатрешната комплексност од одредена програма. Таа е мерка за секвенционален дел од код. Cyclomative complexity ги бара секвенците кои се сами за себе. 
Начинот на кој се одредува е според M = E - N + 2P (E - број на рабоби, N - број на нодови, P - број на поврзани компоненти). Во мојата ситуација M=30-23+1 = 8.

4. Главната цел на Statement Coverage е да ги покрие сите патеки, линии и цели во секвенците на дадениот код. Се пресметува како (Број на извршени секвенци/Цел број на секвенци)x 100. Бројот на извршени секвенци е тешко да биде како бројот на сите секвенци, дел од кодот нема да биде извршен поради вгнездување на код, exceptions, interceptors, циклуси.. Да кажеме дека 
-- Првите тест случаеви се за C0-every statement method и овде се покриени тест случаеви за секвенци или повици од методите.

5. Целта на branch coverage е да може да се тестира секој резултат од кодна секвенца и дека секој услов од секоја гранка да се изврши барем еднаш. На пример ако излезот е бинарен, треба да се има два тест случаеви, еден за true и другиот за false. Формулата за пресметка би била (Број на извршени гранки/Вкупен број на гранки)
-- Вториот случај се за сите C1-every branch method и се покриени истите секвенци од код но со различен исход, во зависност од исходот и бројот на исходи на методот кој се тестира, секој резултат може и треба да биде ново тест сценарио.
